services:
  app:
    build:
      context: ./BlogBE
      dockerfile: Dockerfile
    ports:
      - "80:8080"
    #this capture the value in .env and pass to container as runtime environment variable values
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CONNECTIONSTRINGS__POSTGRESCONNECTION: ${CONNECTIONSTRINGS__POSTGRESCONNECTION}
      CONNECTIONSTRINGS__MONGO: ${CONNECTIONSTRINGS__MONGO}
      CONNECTIONSTRINGS__REDIS: ${CONNECTIONSTRINGS__REDIS}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      JWT__SIGNINGKEY: ${JWT__SIGNINGKEY}
    depends_on:
      - postgres
      - mongo
      - redis
  # the reason why port part can be removed:
  # when I run docker compose up, it will create a private network for all services 
  # the service host name is equal to its service name
  # for example my app can access redis by the link redis:[port]
  # but you still need port for dev
  # otherwise other application like DBeaver, Mongo Compass will not be able to access the database
  postgres:
    image: postgres:17.5
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  mongo:
    image: mongo:7.0
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:7.4
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--appendonly", "yes" ]

volumes:
  postgres_data:
  mongo_data:
  redis_data: